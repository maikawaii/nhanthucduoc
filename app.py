import streamlit as st
from transformers import AutoModelForImageClassification, AutoProcessor
from PIL import Image
import torch

# T·∫£i m√¥ h√¨nh v√† processor
MODEL_NAME = "Laimaimai/herbal_identification"
model = AutoModelForImageClassification.from_pretrained(MODEL_NAME)
processor = AutoProcessor.from_pretrained(MODEL_NAME)

# Thi·∫øt l·∫≠p giao di·ªán
st.set_page_config(page_title="Nh·∫≠n di·ªán D∆∞·ª£c li·ªáu", page_icon="üåø", layout="wide")

# Header
st.title("üå± Nh·∫≠n di·ªán D∆∞·ª£c li·ªáu")
st.write("T·∫£i l√™n ·∫£nh c·ªßa b·∫°n v√† xem k·∫øt qu·∫£ d·ª± ƒëo√°n top 5 c√¢y k√®m ph·∫ßn trƒÉm ch√≠nh x√°c.")

# T·∫£i ·∫£nh t·ª´ ng∆∞·ªùi d√πng
uploaded_file = st.file_uploader("T·∫£i l√™n m·ªôt ·∫£nh d∆∞·ª£c li·ªáu:", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # Hi·ªÉn th·ªã ·∫£nh
    image = Image.open(uploaded_file)
    st.image(image, caption="·∫¢nh b·∫°n v·ª´a t·∫£i l√™n.", use_column_width=True)

    # X·ª≠ l√Ω ·∫£nh v√† d·ª± ƒëo√°n
    inputs = processor(images=image, return_tensors="pt")
    outputs = model(**inputs)
    probs = outputs.logits.softmax(dim=1)
    top_5 = torch.topk(probs, k=5)

    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    st.write("### K·∫øt qu·∫£ d·ª± ƒëo√°n:")
    for i in range(5):
        st.write(f"**{processor.id2label[top_5.indices[0][i].item()]}**: {top_5.values[0][i].item() * 100:.2f}%")
